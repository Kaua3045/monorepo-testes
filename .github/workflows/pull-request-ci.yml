name: Pull Request CI

on:
  pull_request:
    branches:
      - '*'
    types: [labeled]
#  workflow_run:
#    types:
#      - completed
#    workflows:
#      - "Pull Request Label CI"
    # This will trigger the workflow when a label is added to the PR
    # need syncronize to trigger the workflow when a label is removed
    # syncronize to trigger the workflow when new code is pushed to the PR

jobs:
  trigger-service-workflows:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if service label exists
        id: check-label
        run: |
          labels=$(echo '${{ toJson(github.event.pull_request.labels) }}' | jq -c '.')
          
          echo "Labels JSON: $labels"

          modified_labels=$(echo "$labels" | jq -r '[.[] | select(.name | endswith("-modified")) | .name | sub("-modified$"; "")] | join(",")')

          echo "Modified Labels: $modified_labels"

          if [ -n "$modified_labels" ]; then
            echo "modified_labels=$modified_labels" >> $GITHUB_ENV
            echo "::set-output name=modified_labels::$modified_labels"
          else
            echo "No modified labels found."
          fi

      - name: Trigger CI for labeled service
        env:
          GH_TOKEN: ${{ secrets.ACTION_TOKEN }}
        run: |
          modified_labels="${{ steps.check-label.outputs.modified_labels }}"
          echo "Modified Labels: $modified_labels"
          IFS=',' read -ra MODULES <<< "$modified_labels"
          for MODULE in "${MODULES[@]}"; do
            echo "Triggering workflow for $MODULE"
            gh workflow run ${MODULE}-ci.yml --ref "${{ github.event.pull_request.head.ref }}"
          done